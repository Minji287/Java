P165
      Tv의 기능 중에서 전원을 켜고, 전원을 끄고, 채널을 돌려서 현재 채널보다 숫자를 올리고,
      채널을 반대로 돌려서 현재 채널보다 숫자를 내리고, TV 색상을 바꾸는 기능을 컴퓨터에서 수행하는
      프로그램을 작성하려고 한다. 

   Tv class 를 만들고 사용하는 TvMain class를 아래와 같이 만들어 TvMain를 실행하세요.
   1) Tv class
      Tv의 속성과 기능을 기술한다.
      Tv의 속성인 색상, 전원, 채널과 
      기능인 전원켜기, 전원끄기, 채널 숫자 올리기, 채널 숫자 내리기, 색상 바꾸기를 기술한다.
      (1) 사용 변수
	color(문자열 변수), power(boolean 변수), channel(정수형 변수) 모두 초기값을 주지 않는다.
      (2) 사용 메소드(모든 메소드는 반환 값이 없습니다)
	(a) powerOn() => 전원을 On(power = true)으로하고, System.out.println("전원 : " + power); 인쇄
	(b) powerOff() => 전원을 Off(power = false)으로하고, System.out.println("전원 : " + power); 인쇄
	(c) channelUp() => ++channel 하고 System.out.println("현재 채널은 : " + channel); 인쇄
	(d) channelDown() => --channel 하고 System.out.println("현재 채널은 : " + channel); 인쇄
	(e) colorYellow() => color에 yellow를 주고 System.out.println("현재 색상은 : " + color); 인쇄
   2) TvMain class
       (1) Tv class 객체 생성 참조변수는 ts 로 합니다.
       (2) channel 에 기본 값으로 33을 입력합니다.
       (3) powerOn() 실행, powerOff() 실행
       (4) channelUP() 실행, channelDown() 실행
       (5) colorYellow() 실행
   3) Tv class를 객체 생성 하면 일반 메모리에 ts 변수가 만들어 지고 Tv class는 힙메모리에 주소를 부여하고 위치가
      정해진다. 그리고 그 주소는 일반 메모리이 만들어진 ts 변수에 복사되며 ts 변수는 힙메모리의 Tv 인스턴스를
      가리키게 된다. 하드디스크에 저장된 Tv class는 객체라고하며, 힙메모리에 저장된 Tv class는 Tv class의 인스턴스라고 한다.
      즉 객체와 인스턴스는 같은 구조가 되는 것이다. 
      종이와 펜을 준비하고 객체를 생성하여 만들어진 참조변수와 Tv class의 인스턴스를 그림으로 표시해보세요.
      주소는 임으로 지정합니다.

P키보드 사용(SungJuk, SungJukMain)
   SungJukMain class에서는 키보드를 통해서 이름, 국어, 수학, 영어 성적과 주소를 입력받아 SungJuk class로 넘기면 
   SungJuk class에서는 3과목의 합계와 평균을 계산하고 이름, 국어, 수학, 영어 성적과 합계, 평균, 주소를 출력하는
   프로그램을 작성하려고 한다.

   SungJuk class를 만들고 SungjukMain class를 아래와 같이 만들어 SungJukMain 을 실행하세요.
   1) SungJuk class
       (1) 사용 변수
	name(이름), kor(국어성적), mat(수학성적), eng(영어성적), total(합계점수), avg(평균점수), address(주소)
       (2) 사용 메소드(반환 값 없음)
	SungJukInfo() => 이름, 국어성적, 수학성적, 영어성적, 합계점수, 평균점수, 주소 인쇄
   2) SungJukMain class
       (1) SungJuk class 객체 생성 참조변수는 sj 로 합니다.
       (2) 화면에서 이름, 국어, 수학, 영어 성적, 주소를 입력합니다.
	<주의> 영어 성적을 입력하고 주소를 입력할 때는 next() 함수를 사용하세요.
       (3) 키보드에서 입력한 내용을 모두 SungJuk class 변수로 이동합니다.
       (4) SungJuk class에 만들어진 SungJukInfo() 메소드를 사용하여 
	이름, 국어, 수학, 영어, 합계, 평균, 주소를 화면에 출력합니다.
    3) SungJuk class를 객체 생성 하면 일반 메모리에 sj 변수가 만들어 지고 SungJuk class는 힙메모리에 주소를 부여하고 위치가
      정해진다. 그리고 그 주소는 일반 메모리이 만들어진 sj 변수에 복사되며 sj 변수는 힙메모리의 SungJuk 인스턴스를
      가리키게 된다. 하드디스크에 저장된 SungJuk class는 객체라고하며, 힙메모리에 저장된 SungJukv class는 SungJukTv class의 인스턴스라고 한다.
      즉 객체와 인스턴스는 같은 구조가 되는 것이다. 
      종이와 펜을 준비하고 객체를 생성하여 만들어진 참조변수와 SungJuk class의 인스턴스를 그림으로 표시해보세요.
      주소는 임으로 지정합니다.
P108
  Page108Main class 에서 키보드를 통해서 월을 입력 받아 Page108 class로 넘겨주고
  Page108 class에서는 받은 월이 봄(3월, 4월, 5월), 여름(6월, 7월, 8월), 가을(9월, 10월, 11월)
  겨울(1월, 2월, 12월)에 해당하는지를 판단하여 "현재의 계절은 ??입니다"라고 출력하는 프로그램을 작성합니다.

  Page108 class를 만들고 Page108Main class를 아래와 같이 만들어 Page108Main 을 실행하세요
  1) Page108 class
     (1) 사용변수
	month(월을 저장할 정수형 변수)
     (2) 사용 메소드(반환 값 없음) [switch~case 문 사용]
	Page108Info() => 입력된 월이 몇 월인가에 따라  "현재의 계절은 봄입니다",  "현재의 계절은 여름입니다",
	 	         "현재의 계절은 가을입니다",  "현재의 계절은 겨울입니다" 중 한개를 출력한다.
  2) Page108Main class
      (1) 키보드를 사용하기 위해 키보드를 정의하고(참조변수는 scn)
      (2) Page108 class 객체 생성을 하고 이 때 참조 변수는 ss 으로 합니다.
      (3) 월을 입력하라는 메시지를 화면에 출력하고
      (3) 키보드로 부터 월을 입력하고 입력된 월을 Page108 class의 month 변수로 전달합니다.
      (4) Page108Info()를 실행합니다.
   3) 참조변수 ss로 객체 생성된 인스턴스(객체)가 힙메모리에 저장된 모양을 종이에 그려 보세요.

P103
  Page103Main class 에서 키보드를 통해서 성적을 입력 받아 Page103 class로 넘겨주고
  Page103 class에서는 성적이 100~90 > A, 89~80 > B, 79~70 > C, 69~60 > D를 학점으로 정하고
  "당신의 학점은 A 입니다"와 같이 인쇄하는 프로그램을 작성합니다.

   Page103 class를 만들고 Page103Main class를 아래와 같이 만들어 Page103Main을 실행합니다.
  1) Page103 class
     (1) 사용변수
	score(성적을 저장할 정수형 변수)
     (2) 사용 메소드(반환 값 없음) [if~else if ~ 문 사용]
	Page103Info() => 입력된 성적이 100~90 > A, 89~80 > B, 79~70 > C, 69~60 > D를 학점으로 정하고
            		          "당신의 학점은 A 입니다"와 같이 인쇄합니다.
  2) Page103Main class
      (1) 키보드를 사용하기 위해 키보드를 정의하고(참조변수는 scn)
      (2) Page103 class 객체 생성을 하고 이 때 참조 변수는 ss 로 합니다.
      (3) 성적을 입력하라는 메시지를 화면에 출력하고
      (3) 키보드로 부터 성적을 입력하고 입력된 성적을 Page103 class의 score 변수로 전달합니다.
      (4) Page103Info()를 실행합니다.
   3) 참조변수 ss로 객체 생성된 인스턴스(객체)가 힙메모리에 저장된 모양을 종이에 그려 보세요.
 
P추가(FunctionTest)
  FunctionTest class를 작성합니다.
  1) FunctionTest class에는 main() method, addNum() method 두개가 있습니다.
  2) addNum() method에서는 정수형 매개변수 2개를 받아 2개를 더해서 그 결과를 addNum() method를 부르는 곳으로 돌려 줍니다.
  3) main() method에서는 두개의 정수형 변수에 10, 20을 각각 저장하여 addNum() 메소드에게 매개변수로 전달하고
     addNum() 메소드에서 돌려준 두개의 합을 출력합니다.
 
P추가2(Student, StudentMain)
  Student , studentMain class를 만들어 다음과 같은 기능을 하는 프로그램을 작성합니다.
  1) Student class
     (1) 학번(studentID), 이름(studentName), 학년(grade), 주소(address) 변수를 준비합니다.
     (2) 학번, 이름, 학년, 주소를 출력할 showStudentInfo() 메소드를 만듭니다.
  2) StudentMain class
     (1) "이순신"을 입력하여 저장하기 위해 Student class를 객체 생성하고(참조변수는 studentLee)
         이름 > "이순신", 학번 > "2023001", 주소 > "인천시 미추홀구 주안동"을 보냅니다.
     (2) "김유신"을 입력하여 저장하기 위해 Student class를 객체 생성하고(참조변수는 studentKim)
         이름 > "김유신", 학번 > "2023077", 주소 > "서울시 종로구 인사동"을 보냅니다.
     (3) 이순신의 이름, 학번, 주소를 출력합니다.
     (4) 김유신의 이름, 학번, 주소를 출력합니다.
     (5) 참조변수 2개를 모두 출력 합니다.

P137
  Page137, Page137Main class를 만들어 다음과 같은 기능을 하는 프로그램을 작성합니다.
  1) Page137 class
     (1) 합계(sum-정수), 평균(average-실수(float)), 크기가 5인 1차원 정수형 배열(score) 변수를 준비합니다.
     (2) Page137Info() 메소드 만들기
         > 1차원 배열 score 의 합계를 계산해서 sum에 저장하고,
         > sum에 저장된 합계를 배열의 크기로 나누어 소수점이 출력되도록 평균을 구해 average에 저장 합니다.
         > 총합, 평균을 출력합니다.
   2) Page137Main class
      (1) Page137 class를 객체 생성합니다.(참조변수는 pp)
      (2) 1차원 배열인 sc를 만드는데 초기값으로 {100, 88, 100, 100, 90}을 저장합니다.
      (3) 1차원 배열인 sc를 Page137 class의 score로 보내고
      (4) Page137에 만들어진 Page137Info() 메소드를 실행합니다.

P151
  Page151, Page151Main class를 만들어 다음과 같은 기능을 하는 프로그램을 작성합니다.
  1) Page151 class
     (1) 크기가 5행3열인 2차원 정수형 배열(score), 국어합계(korTotal), 영어합계(engTotal), 수학합계(matTotal) 변수를 준비합니다.
     (2) Page151Info() 메소드 만들기
         > "번호 국어 영어 수학 총점 평균" 제목 인쇄
         > "=====================" 인쇄
         > 5행 3열의 2차원 배열 score를 출력
	for(int i=0;i < score.length;i++) {
		int  sum = 0;      // 개인별 총점
		float avg = 0.0f;  // 개인별 평균
		korTotal  += score[i][0];
		engTotal  += score[i][1];
		mathTotal += score[i][2];
		System.out.printf("%3d", i+1);
		for(int j=0;j < score[i].length;j++) {
			sum += score[i][j]; 
			System.out.printf("%5d", score[i][j]);
		}
		avg = sum/(float)score[i].length;  // 평균계산
		System.out.printf("%5d %5.1f%n", sum, avg);
		}
	> 각 과목의 총점 출력
	System.out.println("=============================");
     	System.out.printf("총점:%3d %4d %4d%n", korTotal, engTotal, mathTotal);

   2) Page151Main class
      (1) Page151 class를 객체 생성합니다.(참조변수는 pp)
      (2) 5행 3열 2차원 배열인 sc를 만드는데 초기값으로
          int[][] sc = {{ 100, 100, 100},
		{ 20, 20, 20},
		{ 30, 30, 30},
		{ 40, 40, 40},
		{ 50, 50, 50}
	            }; 을 저장합니다.
      (3) 2차원 배열인 sc를 Page151 class의 score로 보내고
      (4) Page151에 만들어진 Page151Info() 메소드를 실행합니다.

P180
  MyMath class, MyMathMain class를 만들고 실행합니다.
  MyMath class에 두개의 매개변수를 받아 더하기(add), 빼기(subtract), 곱하기(multlply), 나누기(divide) 메소드를 만들고
  덧셈, 뺄셈, 곱셈, 나눗셈을 할 수 있는 준비여 MyMathMain에서 더하기, 빼기, 곱하기, 나누기를 할때 
  두개의 long int 값을 주어 그 결과를 받아 출력합니다.
  1)MyMath class
	(1) add(더하기) 메소드 
	    두개의 log 형 매개변수를 입력 받아 더해서 결과를 add 메소드를 호출한 곳으로 돌려 보낸다. 
	(2) subtract(빼기) 메소드 
	    두개의 log 형 매개변수를 입력 받아 빼서 결과를 subtract 메소드를 호출한 곳으로 돌려 보낸다. 
	(3) multtply(곱하기) 메소드 
	    두개의 log 형 매개변수를 입력 받아 곱해서 결과를 multiply 메소드를 호출한 곳으로 돌려 보낸다. 
	(4) divide(나누기) 메소드 
	    두개의 double 형 매개변수를 입력 받아 나누기해서 결과를 divide 메소드를 호출한 곳으로 돌려 보낸다. 
  2) MyMathMain class
	(1) MyMath class 객체 생성(참조 변수 mm)
	(2) (5L, 3L)을 매개변수로 add 메소드를 호출하고 그 결과를 log 형인 result1 변수에 저장
	(3) (5L, 3L)을 매개변수로 subtract 메소드를 호출하고 그 결과를 log 형인 result2 변수에 저장
	(4) (5L, 3L)을 매개변수로 multiply 메소드를 호출하고 그 결과를 log 형인 result3 변수에 저장
	(5) (5L, 3L)을 매개변수로 divide 메소드를 호출하고 그 결과를 double 형인 result4 변수에 저장
             (6) 결과인 제목을 붙여서 result1부터 result4 가지 출력합니다.


